using System.Collections.Generic;
using System.Text.RegularExpressions;

namespace Magma
{
    internal static class ByteConverter
    {
        private static readonly Dictionary<char, string> asciiTable = new Dictionary<char, string>()
        {
            { 'А', "11000000" },
            { 'Б', "11000001" },
            { 'В', "11000010" },
            { 'Г', "11000011" },
            { 'Д', "11000100" },
            { 'Е', "11000101" },
            { 'Ж', "11000110" },
            { 'З', "11000111" },
            { 'И', "11001000" },
            { 'Й', "11001001" },
            { 'К', "11001010" },
            { 'Л', "11001011" },
            { 'М', "11001100" },
            { 'Н', "11001101" },
            { 'О', "11001110" },
            { 'П', "11001111" },
            { 'Р', "11010000" },
            { 'С', "11010001" },
            { 'Т', "11010010" },
            { 'У', "11010011" },
            { 'Ф', "11010100" },
            { 'Х', "11010101" },
            { 'Ц', "11010110" },
            { 'Ч', "11010111" },
            { 'Ш', "11011000" },
            { 'Щ', "11011001" },
            { 'Ъ', "11011010" },
            { 'Ы', "11011011" },
            { 'Ь', "11011100" },
            { 'Э', "11011101" },
            { 'Ю', "11011110" },
            { 'Я', "11011111" },
            { 'а', "11100000" },
            { 'б', "11100001" },
            { 'в', "11100010" },
            { 'г', "11100011" },
            { 'д', "11100100" },
            { 'е', "11100101" },
            { 'ж', "11100110" },
            { 'з', "11100111" },
            { 'и', "11101000" },
            { 'й', "11101001" },
            { 'к', "11101010" },
            { 'л', "11101011" },
            { 'м', "11101100" },
            { 'н', "11101101" },
            { 'о', "11101110" },
            { 'п', "11101111" },
            { 'р', "11110000" },
            { 'с', "11110001" },
            { 'т', "11110010" },
            { 'у', "11110011" },
            { 'ф', "11110100" },
            { 'х', "11110101" },
            { 'ц', "11110110" },
            { 'ч', "11110111" },
            { 'ш', "11111000" },
            { 'щ', "11111001" },
            { 'ъ', "11111010" },
            { 'ы', "11111011" },
            { 'ь', "11111100" },
            { 'э', "11111101" },
            { 'ю', "11111110" },
            { 'я', "11111111" },
            { ' ', "00100000" }
        };

        public static string GetByteCode(string word)
        {
            if (!Regex.Match(word, @"[а-яА-Я]|| ").Success)
                return "Введите символ кирилицы!";
            string result = string.Empty;
            foreach (char letter in word)
            {
                result += GetByteCode(letter);
            }
            return result;
        }

        public static string GetByteCode(char letter)
        {
            if (!Regex.Match(letter.ToString(), @"[а-яА-Я]|| ").Success)
                return "Введите символ кирилицы!";
            asciiTable.TryGetValue(letter, out string result);
            return result;
        }
    }
}
